// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoMancariBlue.Models;

#nullable disable

namespace ProyectoMancariBlue.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240609131209_InitalMigration")]
    partial class InitalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("ProyectoMancariBlue.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("departamentoId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.HasKey("DepartamentoId");

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique();

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("ProyectoMancariBlue.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empleadoId");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("apellido");

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("canton");

                    b.Property<string>("CedEmpleado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("cedEmpleado");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int")
                        .HasColumnName("departamentoId");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("distrito");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("fechaIngreso");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fechaNacimiento");

                    b.Property<bool?>("Habilitado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("habilitado")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nacionalidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("string")
                        .HasColumnName("password");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("provincia");

                    b.Property<int?>("RoleEmpleadoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("roleEmpleadoId");

                    b.Property<decimal>("Salario")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("salario");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex(new[] { "CedEmpleado" }, "cedEmpleado")
                        .IsUnique();

                    b.HasIndex(new[] { "DepartamentoId" }, "departamentoId");

                    b.HasIndex(new[] { "RoleEmpleadoId" }, "roleEmpleadoId");

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("ProyectoMancariBlue.Models.RolEmpleado", b =>
                {
                    b.Property<int>("RolEmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("rolEmpleadoId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("RolEmpleadoId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .IsUnique()
                        .HasDatabaseName("name1");

                    b.ToTable("rolempleado", (string)null);
                });

            modelBuilder.Entity("ProyectoMancariBlue.Models.Empleado", b =>
                {
                    b.HasOne("ProyectoMancariBlue.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoId")
                        .IsRequired()
                        .HasConstraintName("empleado_ibfk_1");

                    b.HasOne("ProyectoMancariBlue.Models.RolEmpleado", "RoleEmpleado")
                        .WithMany("Empleados")
                        .HasForeignKey("RoleEmpleadoId")
                        .IsRequired()
                        .HasConstraintName("empleado_ibfk_2");

                    b.Navigation("Departamento");

                    b.Navigation("RoleEmpleado");
                });

            modelBuilder.Entity("ProyectoMancariBlue.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ProyectoMancariBlue.Models.RolEmpleado", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
